import telebot
from telebot import types
import requests
from bs4 import BeautifulSoup
import datetime
import schedule
import time
from threading import Thread

def Weather():
    html = requests.get("https://www.google.com/search?q=weatherMoscow").content
    soup = BeautifulSoup(html, 'html.parser')

    temp = soup.find('div', attrs={'class': 'BNeawe iBp4i AP7Wnd'}).text
    str_ = soup.find('div', attrs={'class': 'BNeawe tAd8D AP7Wnd'}).text

    data = str_.split('\n')
    time = data[0]
    sky = data[1]

    listdiv = soup.findAll('div', attrs={'class': 'BNeawe s3v9rd AP7Wnd'})

    strd = listdiv[5].text
    pos = strd.find('Wind')
    other_data = strd[pos:]

    return (temp, time, sky, other_data)

class Event():
    def __init__(self):
        self.Name = ""
        self.Link = ""
        self.Description = ""
        self.Date = None
        self.Location = ""
        self.Theme = ""
        self.Coords = []

class User():
    def __init__(self, id):
        self.UserId = id
        self.Mailing = False
        self.Themes = []
        self.ThemeSelect = False
        self.EventWatching = False

Users = {}
Themes = ["–ù–∞—É–∫–∞", "–£—Ç–∏–ª–∏–∑–∞—Ü–∏—è", "–≠–∫–æ–ø–∏—Ç–∞–Ω–∏–µ"]
Events = []

Events.append(Event())
Events.append(Event())
Events[0].Name = "EVENT 1"
Events[0].Date = datetime.datetime(2024,1,1,12,0,0)
Events[0].Coords = [59.938924, 30.315311]
Events[0].Theme = "–ù–∞—É–∫–∞"
Events[1].Name = "EVENT 2"
Events[1].Date = datetime.datetime(2024,1,1,12,0,0)
Events[1].Coords = [59.938924, 30.315311]

Greeting = " –≠–∫–æ–∞–∫—Ç–∏–≤–∏—Å—Ç—ã –ú–æ—Å–∫–≤—ã, —É –≤–∞—Å –µ—Å—Ç—å —à–∞–Ω—Å –∏–∑–º–µ–Ω–∏—Ç—å –º–∏—Ä! üåø\
–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º, –∫–æ—Ç–æ—Ä—ã–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç –Ω–∞ –∑–∞–±–æ—Ç—É –æ –ø—Ä–∏—Ä–æ–¥–µ! –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è: –æ—Ç –∑–µ–ª–µ–Ω—ã—Ö —è—Ä–º–∞—Ä–æ–∫ –¥–æ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–æ–≤ –ø–æ —É—Å—Ç–æ–π—á–∏–≤–æ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏. –£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –æ—Ö—Ä–∞–Ω—É –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã –∏ –ø–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏. \
–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —Ä–µ–≤–æ–ª—é—Ü–∏–∏ –≤ —Å—Ç–æ–ª–∏—Ü–µ! üåç‚ú® \
–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —É–∂–µ —Å–µ–≥–æ–¥–Ω—è –∏ —Å—Ç–∞–Ω—å—Ç–µ –∞–≥–µ–Ω—Ç–æ–º –ø–µ—Ä–µ–º–µ–Ω!"

Help = '<b>–ü–æ–º–æ—â—å</b> üå± \
\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –≤ –ú–æ—Å–∫–≤–µ! üåç\
\n\n<b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\
\n1. –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è: –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", –∏ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±–ª–∏–∂–∞–π—à–∏—Ö —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –∞–∫—Ü–∏—è—Ö –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø–∞—Ö.\
\n2. –°–æ–±—ã—Ç–∏—è: –ü–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—â–Ω—é—é –¥–∞—Ç—É, –±–ª–∏–∂–∞–π—à–∏–π –º–µ—Å—è—Ü –∏–ª–∏ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –¥–∞—Ç—É.\
\n3. –¢–µ–º—ã —Å–æ–±—ã—Ç–∏–π: –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å —Ç–µ–º—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –æ —Ç–µ—Ö —Å–æ–±—ã—Ç–∏—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã.\
\n\n<b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</b> ‚ùì\
\n- –ö–∞–∫ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π? –î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–ø–∏—Å–∞—Ç—å—Å—è" –≤ –º–µ–Ω—é.\
\n- –ö–∞–∫ —á–∞—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Å–æ–±—ã—Ç–∏—è? –ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –æ–±–Ω–æ–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –µ–∂–µ–¥–Ω–µ–≤–Ω–æ, —á—Ç–æ–±—ã –≤—ã –≤—Å–µ–≥–¥–∞ –±—ã–ª–∏ –≤ –∫—É—Ä—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.\
\n\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∑–∞–±–æ—Ç–∏—Ç–µ—Å—å –æ–± —ç–∫–æ–ª–æ–≥–∏–∏ –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏! üåø'

Subscribe = "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! üåø\
\n\
\n–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –≤ –ú–æ—Å–∫–≤–µ! –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±–ª–∏–∂–∞–π—à–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –∞–∫—Ü–∏—è—Ö –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø–∞—Ö. üìÖ‚ú®\
\n\
\n–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –≤ –∑–∞–±–æ—Ç–µ –æ –ø—Ä–∏—Ä–æ–¥–µ! üåçüíö"

Discribe = "üö´ –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏! üò¢\
\n\
\n–ú—ã —Å–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ —É–π—Ç–∏. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –æ—Ç–∑—ã–≤—ã –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–∞–π—Ç–µ –Ω–∞–º –∑–Ω–∞—Ç—å! üí¨\
\n\
\n–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞. –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å—Ä–µ–¥–∏ –Ω–∞—à–∏—Ö —á–∏—Ç–∞—Ç–µ–ª–µ–π! üåøüíö\
\n\
\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –±—ã–ª–∏ —Å –Ω–∞–º–∏! üåç‚ú®"

bot = telebot.TeleBot('6854680839:AAE9UTXS8sA_VbVTDuoGkL5HpgXMmziL8_M', parse_mode="HTML")

def MoreEventInfo(Event, user):
    Mes = f"<b>{Event.Name}</b>\n"
    Mes += f"–¢–µ–º–∞ —Å–æ–±—ã—Ç–∏—è: {Event.Theme}\n"
    Mes += f"–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è: {Event.Date}\n"
    Mes += f"–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è: {Event.Location}\n"
    Mes += f"\n<b>–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
    Mes += f"{Event.Description}\n"
    Mes += f"\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ: {Event.Link}\n"
    bot.send_message(user, Mes, reply_markup=MainMenu(user))
    bot.send_location(user, Event.Coords[0], Event.Coords[1])

def MainMenu(user):
    global Users
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("‚ùì –ü–æ–º–æ—â—å")
    btn2 = types.KeyboardButton("‚õÖ –ü–æ–≥–æ–¥–∞")
    btn3 = types.KeyboardButton("üìÖ –°–æ–±—ã—Ç–∏—è")
    btn4 = types.KeyboardButton("‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è") if not Users[user].Mailing else types.KeyboardButton("‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è")
    btn5 = types.KeyboardButton("‚öô –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ–º—ã")
    markup.add(btn1, btn2, btn3, btn4, btn5)
    return markup

@bot.message_handler(commands=['start'])
def start(message):
    user = message.from_user.id
    if user not in Users.keys():
        Users[user] = User(user)
    bot.send_message(user, Greeting, reply_markup=MainMenu(user))

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global ThemeSelect
    user = message.from_user.id
    if user not in Users.keys():
        Users[user] = User(user)
    if message.text == "‚ùì –ü–æ–º–æ—â—å":
        bot.send_message(message.from_user.id, Help)
    if message.text == "‚õÖ –ü–æ–≥–æ–¥–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        temp, time, sky, other_data = Weather()

        Mes = f"–°–µ–≥–æ–¥–Ω—è, {time} –≤ –ú–æ—Å–∫–≤–µ {sky}.\n –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {temp}"

        bot.send_message(message.from_user.id, Mes)
    if message.text == "‚Ü™ –ù–∞–∑–∞–¥":
        Users[user].EventWatching = False
        Users[user].ThemeSelect  = False
        start(message)
    if message.text == "‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è":
        Users[user].Mailing = True
        bot.send_message(message.from_user.id, Subscribe, reply_markup=MainMenu(user))
    if message.text == "‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è":
        Users[user].Mailing = False
        bot.send_message(message.from_user.id, Discribe, reply_markup=MainMenu(user))

    if message.text == "‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å":
        Users[user].ThemeSelect  = False
        start(message)

    if message.text == "‚öô –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ–º—ã":
        Users[user].ThemeSelect = True
        Mes = "<b>–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–º:</b>\n"
        for i in enumerate(Themes):
            Mes += str(i[0]+1) + ") "
            Mes += i[1]
            Mes += " ‚úÖ " if i[1] in Users[user].Themes else " ‚ùå "
            Mes += "\n"
        Mes += "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–º—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏\–æ—Ç–ø–∏—Å–∫–∏ –æ—Ç –Ω–µ–µ"
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn4 = types.KeyboardButton("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        markup.add(btn4)

        bot.send_message(message.from_user.id, Mes, reply_markup=markup)

    if Users[user].ThemeSelect and message.text.isdigit():
        try:
            Number = int(message.text)
            Ind = Number-1
            if Themes[Ind] not in Users[user].Themes:
                Users[user].Themes.append(Themes[Ind])
            else:
                Users[user].Themes.remove(Themes[Ind])

            Mes = "<b>–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–º:</b>\n"
            for i in enumerate(Themes):
                Mes += str(i[0] + 1) + ") "
                Mes += i[1]
                Mes += " ‚úÖ " if i[1] in Users[user].Themes else " ‚ùå "
                Mes += "\n"
            Mes += "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–º—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏\–æ—Ç–ø–∏—Å–∫–∏ –æ—Ç –Ω–µ–µ"
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn4 = types.KeyboardButton("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
            markup.add(btn4)

            bot.send_message(message.from_user.id, Mes, reply_markup=markup)
        except:
            bot.send_message(message.from_user.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!")

    if message.text == "üìÖ –°–æ–±—ã—Ç–∏—è":
        Users[user].EventWatching = True
        Mes = "<b>–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è:</b>\n"
        for i in enumerate(Events):
            Mes += str(i[0]+1) + ") "
            Mes += str(i[1].Date) + " - " + i[1].Name
            Mes += "\n"
        Mes += "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–æ–±—ã—Ç–∏—è —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ"
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("‚Ü™ –ù–∞–∑–∞–¥")
        markup.add(btn1)

        bot.send_message(message.from_user.id, Mes, reply_markup=markup)

    if Users[user].EventWatching and message.text.isdigit():
        try:
            Number = int(message.text)
            Ind = Number - 1

            MoreEventInfo(Events[Ind], user)

            Mes = "<b>–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è:</b>\n"
            for i in enumerate(Events):
                Mes += str(i[0] + 1) + ") "
                Mes += str(i[1].Date) + " - " + i[1].Name
                Mes += "\n"
            Mes += "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–æ–±—ã—Ç–∏—è —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ"
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("‚Ü™ –ù–∞–∑–∞–¥")
            markup.add(btn1)

            bot.send_message(message.from_user.id, Mes, reply_markup=markup)
        except:
            bot.send_message(message.from_user.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!")

def schedule_checker():
    while True:
        schedule.run_pending()
        time.sleep(10)

def function_to_run():
    print("FUNC")
    for Ev in Events:
        for Us in Users.keys():
            if Ev.Theme in Users[Us].Themes:
                MoreEventInfo(Ev, Us)
if __name__ == "__main__":
    schedule.every().day.at("12:00").do(function_to_run)
    Thread(target=schedule_checker).start()
    bot.polling(none_stop=True, interval=0)